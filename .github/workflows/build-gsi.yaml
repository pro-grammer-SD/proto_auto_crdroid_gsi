name: AOSP-GSI-Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    env:
      CCACHE_DIR: /home/runner/work/ccache
      USE_CCACHE: 1
      CCACHE_SIZE: 8G
      BUILD_TARGET: systemimage
      ROM_NAME: aosp
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git-core gnupg flex bison build-essential zip curl zlib1g-dev \
            gcc-multilib g++-multilib libc6-dev-i386 libncurses5-dev x11proto-core-dev \
            libx11-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig python3
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Restore ccache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ github.run_id }}
          restore-keys: ccache-

      - name: Initialize repo
        run: |
          mkdir -p aosp
          cd aosp
          repo init -u https://android.googlesource.com/platform/manifest -b android-15.0.0_r1
          repo sync -c --no-tags --optimized-fetch --prune -j4

      - name: Setup environment
        run: |
          cd aosp
          source build/envsetup.sh
          lunch aosp_arm64-eng

      - name: Build GSI
        run: |
          cd aosp
          set +e
          make -j$(nproc) $BUILD_TARGET || true
          df -h
          du -sh out || true

      - name: Cleanup on low space
        run: |
          USED=$(df --output=pcent / | tail -1 | tr -dc '0-9')
          if [ "$USED" -gt 90 ]; then
            echo "Disk nearly full ($USED%), cleaning intermediates..."
            rm -rf out/target/product/*/obj
            sudo apt-get clean
            df -h
          fi

      - name: Retry build
        if: failure()
        run: |
          cd aosp
          make -j$(nproc) $BUILD_TARGET

      - name: Upload system image
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ROM_NAME }}-gsi
          path: aosp/out/target/product/**/system*.img
