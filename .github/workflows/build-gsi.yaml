name: Monthly AOSP GSI Build (ARM64-AB)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Run every 6 hours

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    env:
      BUILD_DIR: aosp
      TARGET: aosp_arm64_ab-eng
      BUILD_DONE_FILE: .build_done

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Stop if already built this month
        run: |
          MONTH=$(date +%Y-%m)
          if [ -f $BUILD_DONE_FILE ] && grep -q "$MONTH" $BUILD_DONE_FILE; then
            echo "‚úÖ Build already completed for $MONTH. Skipping..."
            exit 0
          fi

      - name: Setup repo tool
        run: |
          mkdir -p ~/bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo -o ~/bin/repo
          chmod +x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Detect latest AOSP branch
        id: branch
        run: |
          LATEST=$(curl -s https://android.googlesource.com/platform/manifest/+refs | \
          grep -oE 'android-[0-9]+\.[0-9]+\.[0-9]+_r[0-9]+' | sort -V | tail -n 1)
          echo "branch=$LATEST" >> $GITHUB_OUTPUT
          echo "üì¶ Detected latest branch: $LATEST"

      - name: Restore branch-aware ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ steps.branch.outputs.branch }}-${{ runner.os }}
          restore-keys: ccache-${{ steps.branch.outputs.branch }}

      - name: Initialize repo
        run: |
          mkdir -p $BUILD_DIR
          cd $BUILD_DIR
          repo init -u https://android.googlesource.com/platform/manifest -b ${{ steps.branch.outputs.branch }} || true

      - name: Sync AOSP source
        run: |
          cd $BUILD_DIR
          repo sync -c --optimized-fetch --prune --no-tags --force-sync \
            --retry-fetches=5 --fail-fast -j$(($(nproc)*3)) || true

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-17-jdk bc bison build-essential curl flex g++-multilib gcc-multilib \
          git gnupg gperf libxml2-utils lzop zip zlib1g-dev python3 python-is-python3 rsync ccache

      - name: Setup ccache
        run: |
          export USE_CCACHE=1
          ccache -M 10G
          ccache -z
          echo "‚úÖ Ccache configured for up to 10 GB"

      - name: Build system image
        id: build
        continue-on-error: true
        run: |
          cd $BUILD_DIR
          source build/envsetup.sh
          lunch $TARGET
          make -j$(nproc) systemimage

      - name: Mark build complete
        if: steps.build.outcome == 'success'
        run: |
          echo "$(date +%Y-%m)" > $BUILD_DONE_FILE
          echo "üèÅ Build finished successfully for this month."

      - name: Upload artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: AOSP-${{ steps.branch.outputs.branch }}-$(date +%b-%Y)
          path: ${{ env.BUILD_DIR }}/out/target/product/generic_arm64_ab/system.img
          if-no-files-found: ignore
